import random
import os
from dotenv import load_dotenv

from aiogram import F, Router
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.enums.parse_mode import ParseMode

import bot.keyboards.keyboards as kb
import bot.database.requests as req

random.seed(2024)
load_dotenv()
main_router = Router()


@main_router.message(CommandStart())
async def reply_start_command(message: Message):
    await req.set_user(message.from_user.id)
    message_answer = f'–ü—Ä–∏–≤–µ—Ç, {
        message.from_user.username}!\n–ù–∞–∂–º–∏ /help, –µ—Å–ª–∏ –ø–æ—Ç–µ—Ä—è–ª—Å—è.'
    await message.answer(message_answer, reply_markup=kb.main_kb)


@main_router.message(Command('help'))
async def reply_help_command(message: Message):
    message_answer = '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∏ –∑–∞–±—Ä–æ–Ω–∏—Ç—å –ø–æ–¥–∞—Ä–æ—á–µ–∫. –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤–Ω–∏–∑—É'
    await message.answer(message_answer, reply_markup=kb.main_kb)


@main_router.message(F.text == '–ü–æ–∏–≥—Ä–∞—Ç—å –≤ "—Ä—É–ª–µ—Ç–∫—É"')
async def send_dice(message: Message):
    await message.answer_dice(emoji=random.choice(['üé≥', 'üéØ', 'üèÄ', 'üé∞', 'üé≤']))


@main_router.message(F.text == '–ë–ª–∏–∂–∞–π—à–∏–µ –ü–í–ó')
async def reply_pvz_links(message: Message):
    message_answer = f"""üçÄ [Ozon]({os.getenv('OZON_PVZ')})\nüçÄ [–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç]({
        os.getenv('YA_MARKET_PVZ')})"""
    await message.answer(message_answer, reply_markup=kb.main_kb, parse_mode=ParseMode.MARKDOWN)


@main_router.message(F.text == '–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
async def reply_categories(message: Message):
    message_answer = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞'
    await message.answer(message_answer, reply_markup=await kb.categories_kb())


@main_router.message()
async def reply_any_message(message: Message):
    message_answer = '–Ø –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∞–∫–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µüôè'
    await message.answer(message_answer, reply_markup=kb.main_kb)
