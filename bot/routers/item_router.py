from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.enums.parse_mode import ParseMode
from aiogram.utils.formatting import Text, Bold, Italic, Code

import bot.keyboards.keyboards as kb
import bot.database.requests as req

item_router = Router()


def format_price(price):
    return format(price, ',d').replace(',', ' ')


@item_router.callback_query(F.data.startswith('category_'))
async def reply_items_by_category(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é')

    all_items = await req.get_items_by_category(callback.data.split('_')[1])

    # TODO: –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã aiogram
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    message_answer = '\n\n'.join([f'{'üü¢' if item.availability else 'üî¥'} –ù–∞–∑–≤–∞–Ω–∏–µ: {item.name}\n–¶–µ–Ω–∞: {
        item.price}‚ÇΩ\n–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: /get{item.id}' for item in all_items])

    await callback.message.answer(message_answer, parse_mode=ParseMode.MARKDOWN)


@item_router.message(F.text.startswith('/get'))
async def reply_item(message: Message):
    item_data = await req.get_human_read_item(message.text[4:])

    message_answer = Text(Bold(f'üåü {item_data.name}'),
                          Italic(f'\n\n{format_price(item_data.price)} ‚ÇΩ'),
                          '\n–°–≤–æ–±–æ–¥–Ω–æ: ',
                          f'{"üü¢" if item_data.availability else "üî¥"}',
                          '\n\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ',
                          Code(f'{item_data.category_name.name}'),
                          f'\n–û–ø–∏—Å–∞–Ω–∏–µ: {item_data.description}',
                          '\n–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ: ',
                          f'{"üü¢" if item_data.is_many else "üî¥"}'
                          )

    await message.answer(**message_answer.as_kwargs(), reply_markup=await kb.get_item_for_booking(item_data.id))


@item_router.callback_query(F.data.startswith('item_'))
async def reply_book_item(callback: CallbackQuery):
    await callback.answer('–ë—Ä–æ–Ω–∏—Ä—É—é –ø–æ–¥–∞—Ä–æ–∫...')

    item_data = await req.get_item(callback.data.split('_')[1])
    if item_data.availability == False:
        await callback.message.answer('–ü–æ–¥–∞—Ä–æ–∫ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, –Ω–æ –µ—Å–ª–∏ –µ–≥–æ –º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üíû', reply_markup=kb.main_kb)
    else:
        await req.set_availability(item_data.id)
        await callback.message.answer('–ü–æ–¥–∞—Ä–æ–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω üíû', reply_markup=kb.main_kb)
